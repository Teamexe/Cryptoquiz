<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
  <link
    href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,600italic,300italic,400italic,300,700italic,800italic,800"
    rel="stylesheet" type="text/css" />
  <link href="https://cdn.materialdesignicons.com/5.4.55/css/materialdesignicons.min.css" media="all"
    rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="CSS/quiz.css">
  <link rel="stylesheet" href="CSS/main.css">
  <link rel="stylesheet" href="CSS/index.css">
  <link rel="stylesheet" href="CSS/util.css">
  <link rel="stylesheet" href="CSS/questioncard.css">
  <link rel="stylesheet" href="CSS/dev.css">
  <link rel="stylesheet" href="CSS/leader.css">
  <!-- <script src="JS/qc.js"></script> -->
  <title>Cryptoquiz</title>


  <!-- <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script> -->
  <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
  <link rel="stylesheet" href="//fonts.googleapis.com/css?family=font1|font2|etc" type="text/css">
  <script src="https://kit.fontawesome.com/2c7fc28a2f.js"></script>

</head>

<body style="background-attachment: fixed;    background: black;">
  <video playsinline="" autoplay="" muted="" loop="" id="bgvid" style="object-fit: cover;
    width: 100vw;
    height: 100vh;
    position: fixed;
    top: 0;
    z-index: -1;
    opacity: .5;
    left: 0;">
    <source src="Assets/imgs/bgvideo.mp4" type="video/mp4">
  </video>

  <div class="navigation-bar">
    <nav class="navbar navbar-expand-lg navbar-dark justify-content-between">
      <div class="container-fluid">
        <a class="navbar-brand">Hello <%=name%></a>
        <span style="visibility:hidden" id="identity">
          <%=identity %>
        </span>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <form action="/logout" method="post">
            <input hidden type="text" name="_csrf" value="<%=csrfToken%>">
            <ul class="navbar-nav">
              <li class="nav-item"><a href="/quiz" class="btn btn-primary button lbutton">Quiz</a></li>
              <li class="nav-item"><a href="/developers" class="btn btn-primary button lbutton">Developers</a></li>
              <li class="nav-item"><button type="submit" class="btn btn-primary button lbutton">Logout</a></li>
            </ul>
          </form>
        </div>
      </div>
    </nav>
  </div>
  <h1 class="h1">CRYPTOBOARD</h1>
  <div class="leader">
    <table>
      <tr>
        <th>
          Pos
        </th>
        <th>
          Player Name
        </th>
        <th>
          Time Submitted
        </th>
      </tr>
      <% let arr=[] %>
        <% for(let i=0;i < answer.length; i++) { %>
          <% arr.push({name:answer[i].name , roll:answer[i].email, points: answer[i].points, time: answer[i].timestamp})
          %>
          <% } %>
          <%= arr[0].timestamp %>
              <div class="hack" style="background-color: white; visibility: hidden; height: 0;">
                <% for(let i=0;i < arr.length; i++) { %>
                  <%= arr[i].name %>-<%= arr[i].roll %>-<%= arr[i].points %>-<%= arr[i].time %>,
                          <% } %>
              </div>
    </table>

  </div>
  <!-- <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script> -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0"
      crossorigin="anonymous"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
  <script>
    let arr = document.querySelector('.hack').firstChild.nodeValue.trim().split(',')
    arr = arr.map((element) => {
      return element.trim();
    })
    let finalArray = [];
    for(let i=0 ; i < arr.length - 1; i++){
      newArray = arr[i].split('-');
      finalArray.push({name:newArray[0],roll: newArray[1],point: newArray[2], timestamp: newArray[3]})
    }
    console.log(finalArray);



  //  js code
  const colors = {
  17: '#F596C8',
  18: '#00D2BE',
  19: '#DC0000',
  20: '#FFF500',
  21: '#1E41FF',
  22: '#9B0000',
  23: '#469BFF',

  0: '#FF8700',
}



// array describing the drivers, sorted by position and with a gap describing the distance from the leading driver
const leaderboard = finalArray;

// target the table element in which to add one div for each driver
const main = d3.select('table');

// for each driver add one table row
// ! add a class to the row to differentiate the rows from the existing one
// otherwise the select method would target the existing one and include one row less than the required amount
const drivers = main
  .selectAll('tr.driver')
  .data(leaderboard)
  .enter()
  .append('tr')
  .attr('class', 'driver');

// in each row add the information specified by the dataset in td elements
// specify a class to style the elements differently with CSS

// position using the index of the data points
drivers
  .append('td')
  .text((d, i) => i + 1)
  .attr('class', 'position');


// name followed by the team
drivers
  .append('td')
  // include the last name in a separate element to style it differently
  // include the team also in another element for the same reason
  .html(({ name  , roll}) => `${name.split(' ').map((part, index) => index > 0 ? `<strong>${part}</strong>` : `${part}`).join(' ')}<span>${roll}</span><hr>`)
  // include a border with the color matching the team
  .style('border-left', ({ roll }) => {
    // find the color using the string value found in d.team
    // ! if the string value has a space, camelCase the value
    // console.log({roll})
    if(roll)
    {var f = roll.substring(0, 2);
    // console.log(f)
    var color = f.split(' ').map((word, index) => index > 0 ? `${word[0].toUpperCase()}${word.slice(1)}` : `${word}`).join('');
    if (!colors[color]) color = '0';
    }else{
      color = '0';
    }
    return `4px solid ${colors[color]}`;
  })
  .attr('class', 'driver');

// gap from the first driver
drivers
  .append('td')
  .attr('class', 'gap')
  .append('span')
  .text(({ time }) => '27th March 25:16PM');



  </script>
  <!-- 
      <script src="js/leaderboard.js"></script> -->

</body>

</html>