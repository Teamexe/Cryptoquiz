<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
  <link
    href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,600italic,300italic,400italic,300,700italic,800italic,800"
    rel="stylesheet" type="text/css" />
  <link href="https://cdn.materialdesignicons.com/5.4.55/css/materialdesignicons.min.css" media="all"
    rel="stylesheet" />
    <script src="https://kit.fontawesome.com/b68197f8e1.js" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="CSS/quiz.css">
  <link rel="stylesheet" href="CSS/main.css">
  <link rel="stylesheet" href="CSS/index.css">
  <link rel="stylesheet" href="CSS/util.css">
  <link rel="stylesheet" href="CSS/questioncard.css">
  <!-- <script src="JS/qc.js"></script> -->
  <title>Cryptoquiz</title>
</head>

<body style="background-attachment: fixed;    background: black;">

  <video playsinline="" autoplay="" muted="" loop="" id="bgvid" style="object-fit: cover;
width: 100vw;
height: 100vh;
position: fixed;
top: 0;
z-index: -1;
opacity: .5;
left: 0;">
    <source src="Assets/imgs/bgvideo.mp4" type="video/mp4">
  </video>
  <div class="c-submission" id="correct-submission">
    <div style="background-color: #00000052;" class="center">
      <h2><span style="color: #01d601;">
        <img class="correct-sol" style="display: block;" src="Assets/imgs/correct.gif" alt="">
          <!--<i class="fa fa-times mx-3"></i>--> 
          <!-- <i class="fa fa-check-square-o green mx-4"></i> -->
          Your submission is correct.
          <br>
          <div style="font-size: 16px; margin-top: 15px;color: white;" class="red">
            Your are being redirected to next round in 5 secs....
          </div>

          <!-- <button id="next-round">
            Next Round
          </button> -->

        </span>
      </h2>
    </div>
  </div>
  <div class="c-submission" id="incorrect-submission">
    <div style="background-color: #00000052;" class="center">
      <h2><span style="color: #dc1313;">
          <!-- <i class="fa fa-times mx-3 red"></i> -->
          <i class="far fa-times-circle mx-3"></i>
          <br>
           Your submission is incorrect.
          <br>
          <div style="font-size: 16px; margin-top: 20px;color: white;" class="red">
            You will be redirected to same screen after 5 secs....
          </div>
        </span>
      </h2>
    </div>
  </div>
  <div class="c-submission" id="others-submission">
    <div class="center">
      <h2><span style="color: orange;">
          <!--<i class="fa fa-times mx-3"></i>--> <img class="correct-sol" style="display: block;" src="Assets/imgs/clock.png" alt="">Someone else submitted before you :(
        </span>
      </h2>
    </div>
  </div>
  <div class="c-submission" id="quiz-end">
    <div class="center">
      <h2><span style="color: blue;">
          <!--<i class="fa fa-times mx-3"></i>--> <i style="display: block; ;font-size: 125px;color: white;padding-bottom: 20px;" class="fa fa-clock-o green mx-4"></i>Quiz has ended.
        </span>
      </h2>
    </div>
  </div>
  <div class="navigation-bar">
    <nav class="navbar navbar-expand-lg navbar-dark justify-content-between">
      <div class="container-fluid">
        <a class="navbar-brand">Hello <%=name%></a>
        <span style="visibility:hidden" id="identity">
          <%=identity %>
        </span>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
          aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <form action="/logout" method="post">
            <input hidden type="text" name="_csrf" value="<%=csrfToken%>">
            <ul class="navbar-nav">
              <li class="nav-item"><a href="/cryptoboard" class="btn btn-primary button lbutton">Cryptoboard</a></li>
              <li class="nav-item"><a href="/developers" class="btn btn-primary button lbutton">Developers</a></li>
              <li class="nav-item"><button type="submit" class="btn btn-primary button lbutton">Logout</a></li>
            </ul>
          </form>
        </div>
      </div>
    </nav>
  </div>
  <h1 class="text-center text-capitalize pt-5" style="color: #fff; transform: translateY(50px);">Round X/10</h1>
  <hr style="font-weight: bold; transform: translateY(50px);" class="w-25 mx-auto">
  <div class="row" id="questions">
    <div class="container">
      <div class="card-column column-0">
        <div class="card card-color-0">
          <div class="border"></div>
          <img src="Assets/imgs/11.jpg" />
          <h1>Question- 1 Title</h1>
        </div>
        <div class="card card-color-2">
          <div class="border"></div>
          <img src="Assets/imgs/3.jpg" />
          <h1>Question- 3 Title</h1>
        </div>
      </div>
      <div class="card-column column-1">
        <div class="card card-color-1">
          <div class="border"></div>
          <img src="Assets/imgs/2.jpg" />
          <h1>Question- 2 Title</h1>
        </div>
        <div class="card card-color-3">
          <div class="border"></div>
          <img src="Assets/imgs/44.jpg" />
          <h1>Question- 4 Title</h1>
        </div>
      </div>
    </div>
    <div class="container-fluid answer-container">
      <div class="row" style="padding-bottom: 10vh;">
        <div class="container-fluid ans">
          <input type="text" class="feild" id="exampleInputNumber" aria-describedby="numberHelp"
            placeholder="Your Answer" name="answer">

          <button id="submitAnswer">
            <span></span>
            <span></span>
            <span></span>
            <span></span>
            Submit</button>
        </div>
      </div>
    </div>

    <div id="cover" class="cover"></div>

    <div id="open-content" class="open-content">
      <a href="#" id="close-content" class="close-content">
        <!-- <span class="x-1"></span>
        <span class="x-2"></span> -->
        <i style="font-size: 25px;" class="far fa-times-circle"></i>
      </a>
      <img id="open-content-image" src="" />
      <div class="text" id="open-content-text">
      </div>
    </div>



    <!--Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0"
      crossorigin="anonymous"></script>
    <!-- <script src="JS/base.js"></script> -->
    <!-- <script type="text/javascript" src="JS/quiz.js"></script> -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
      function popnext(a){
        // console.log('abc');
        document.getElementById('questions').style.visibility = 'visible';
          a.style.visibility = "hidden";
          // document.getElementsByClassName("navigation-bar")[0].style.backgroundColor = "transparent";
          document.body.style.overflowY = "visible";
      }

      var q = [];
      var i;
      const populate = ({ ques1, ques2, ques3, ques4,roundNumber }) => {
        // Ques1 = document.querySelector('#q1').firstChild
        // Ques2 = document.querySelector('#q2').firstChild
        // Ques3 = document.querySelector('#q3').firstChild
        // Ques4 = document.querySelector('#q4').firstChild
        // Ques1.nodeValue = ques1;
        // Ques2.nodeValue = ques2;
        // Ques3.nodeValue = ques3;
        // Ques4.nodeValue = ques4;
        i = 0
        q[0] = ques1;
        q[1] = ques2;
        q[2] = ques3;
        q[3] = ques4;
        console.log(roundNumber);

        // console.log({ ques1, ques2, ques3, ques4 })
      }

      const submitButton = document.querySelector('#submitAnswer')
      const socket = io();
      socket.on('question', data => {
        populate(data);
      })

      submitButton.addEventListener('click', e => {
        e.preventDefault;
        let data1 = document.querySelector('#exampleInputNumber').value.trim();
        let data2 = document.querySelector('.navbar span').firstChild.nodeValue.trim();
        let data = {
          answer: data1,
          identity: data2
        }
        console.log(data)
        socket.emit('answer', data);
      })
      socket.on('Submission', value => {
        document.getElementById('questions').style.visibility = 'hidden';
        document.body.style.overflowY = "hidden";
        window.scrollTo(0,0);
        let a;
        // document.getElementsByClassName("navigation-bar")[0].style.backgroundColor = "black";
        if (value) {
          //Make a dom element whose visibility changes from hidden and it says correct submission
          console.log('correct submission');
          a = document.getElementById("correct-submission");
          a.style.visibility = "visible";
        } else {
          console.log('Wrong Submission');
          a = document.getElementById("incorrect-submission");
          a.style.visibility = "visible";
        }
        setTimeout(() => {  popnext(a); }, 5000);
      })

      socket.on('elseSubmission', () => { //Listening for others submissions
        console.log('Someone else submitted');
        // document.getElementsByClassName("navigation-bar")[0].style.backgroundColor = "black";
        let a = document.getElementById("others-submission");
          a.style.visibility = "visible";
          document.getElementById('questions').style.visibility = 'hidden';
          document.body.style.overflowY = "hidden";
          window.scrollTo(0,0);
          setTimeout(() => {  popnext(a); }, 5000);
      })
      
      socket.on('finish',data=>{
        if(data){
          setTimeout(()=>{
          console.log("Finished")
          let a = document.getElementById("quiz-end");
          a.style.visibility = "visible";
          document.getElementById('questions').style.visibility = 'hidden';
          document.body.style.overflowY = "hidden";
          window.scrollTo(0,0);
        }, 5500);}
      })

      // listing vars here so they're in the global scope
      var cards, nCards, cover, openContent, openContentText, pageIsOpen = false,
        openContentImage, closeContent, windowWidth, windowHeight, currentCard;

      // initiate the process
      init();

      function init() {
        resize();
        selectElements();
        attachListeners();
      }

      // select all the elements in the DOM that are going to be used
      function selectElements() {
        cards = document.getElementsByClassName('card'),
          nCards = cards.length,
          cover = document.getElementById('cover'),
          openContent = document.getElementById('open-content'),
          openContentText = document.getElementById('open-content-text'),
          openContentImage = document.getElementById('open-content-image')
        closeContent = document.getElementById('close-content');
      }

      /* Attaching three event listeners here:
        - a click event listener for each card
        - a click event listener to the close button
        - a resize event listener on the window
      */
      function attachListeners() {
        for (var i = 0; i < nCards; i++) {
          attachListenerToCard(i);
        }
        closeContent.addEventListener('click', onCloseClick);
        window.addEventListener('resize', resize);
      }

      function attachListenerToCard(i) {
        cards[i].addEventListener('click', function (e) {
          var card = getCardElement(e.target);
          onCardClick(card, i);
        })
      }

      /* When a card is clicked */
      function onCardClick(card, i) {
        // set the current card
        currentCard = card;
        // add the 'clicked' class to the card, so it animates out
        currentCard.className += ' clicked';
        // animate the card 'cover' after a 500ms delay
        setTimeout(function () { animateCoverUp(currentCard) }, 500);
        // animate out the other cards
        animateOtherCards(currentCard, true);
        // add the open class to the page content
        openContent.className += ' open';
      }

      /*
      * This effect is created by taking a separate 'cover' div, placing
      * it in the same position as the clicked card, and animating it to
      * become the background of the opened 'page'.
      * It looks like the card itself is animating in to the background,
      * but doing it this way is more performant (because the cover div is
      * absolutely positioned and has no children), and there's just less
      * having to deal with z-index and other elements in the card
      */
      function animateCoverUp(card) {
        // get the position of the clicked card


        // console.log(card);
        var c = card.classList[1];
        // console.log(typeof (c.split("-")[2]));
        var i = parseInt(c.split("-")[2]);
        // console.log(q[i]);


        var cardPosition = card.getBoundingClientRect();
        // get the style of the clicked card
        var cardStyle = getComputedStyle(card);
        setCoverPosition(cardPosition);
        setCoverColor(cardStyle);
        scaleCoverToFillWindow(cardPosition);
        // update the content of the opened page
        openContentText.innerHTML = '<h1>' + card.children[2].textContent + '</h1>' + q[i];
        openContentImage.src = card.children[1].src;
        setTimeout(function () {
          // update the scroll position to 0 (so it is at the top of the 'opened' page)
          window.scroll(0, 0);
          // set page to open
          pageIsOpen = true;
        }, 300);
      }

      function animateCoverBack(card) {
        var cardPosition = card.getBoundingClientRect();
        // the original card may be in a different position, because of scrolling, so the cover position needs to be reset before scaling back down
        setCoverPosition(cardPosition);
        scaleCoverToFillWindow(cardPosition);
        // animate scale back to the card size and position
        cover.style.transform = 'scaleX(' + 1 + ') scaleY(' + 1 + ') translate3d(' + (0) + 'px, ' + (0) + 'px, 0px)';
        setTimeout(function () {
          // set content back to empty
          openContentText.innerHTML = '';
          openContentImage.src = '';
          // style the cover to 0x0 so it is hidden
          cover.style.width = '0px';
          cover.style.height = '0px';
          pageIsOpen = false;
          // remove the clicked class so the card animates back in
          currentCard.className = currentCard.className.replace(' clicked', '');
        }, 301);
      }

      function setCoverPosition(cardPosition) {
        // style the cover so it is in exactly the same position as the card
        cover.style.left = cardPosition.left + 'px';
        cover.style.top = cardPosition.top + 'px';
        cover.style.width = cardPosition.width + 'px';
        cover.style.height = cardPosition.height + 'px';
      }

      function setCoverColor(cardStyle) {
        // style the cover to be the same color as the card
        cover.style.backgroundColor = cardStyle.backgroundColor;
      }

      function scaleCoverToFillWindow(cardPosition) {
        // calculate the scale and position for the card to fill the page,
        var scaleX = windowWidth / cardPosition.width;
        var scaleY = windowHeight / cardPosition.height;
        var offsetX = (windowWidth / 2 - cardPosition.width / 2 - cardPosition.left) / scaleX;
        var offsetY = (windowHeight / 2 - cardPosition.height / 2 - cardPosition.top) / scaleY;
        // set the transform on the cover - it will animate because of the transition set on it in the CSS
        cover.style.transform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ') translate3d(' + (offsetX) + 'px, ' + (offsetY) + 'px, 0px)';
      }

      /* When the close is clicked */
      function onCloseClick() {
        // remove the open class so the page content animates out
        openContent.className = openContent.className.replace(' open', '');
        // animate the cover back to the original position card and size
        animateCoverBack(currentCard);
        // animate in other cards
        animateOtherCards(currentCard, false);
      }

      function animateOtherCards(card, out) {
        var delay = 100;
        for (var i = 0; i < nCards; i++) {
          // animate cards on a stagger, 1 each 100ms
          if (cards[i] === card) continue;
          if (out) animateOutCard(cards[i], delay);
          else animateInCard(cards[i], delay);
          delay += 100;
        }
      }

      // animations on individual cards (by adding/removing card names)
      function animateOutCard(card, delay) {
        setTimeout(function () {
          card.className += ' out';
        }, delay);
      }

      function animateInCard(card, delay) {
        setTimeout(function () {
          card.className = card.className.replace(' out', '');
        }, delay);
      }

      // this function searches up the DOM tree until it reaches the card element that has been clicked
      function getCardElement(el) {
        if (el.className.indexOf('card ') > -1) return el;
        else return getCardElement(el.parentElement);
      }

      // resize function - records the window width and height
      function resize() {
        if (pageIsOpen) {
          // update position of cover
          var cardPosition = currentCard.getBoundingClientRect();
          setCoverPosition(cardPosition);
          scaleCoverToFillWindow(cardPosition);
        }
        windowWidth = window.innerWidth;
        windowHeight = window.innerHeight;
      }

      var paragraphText = '<p>Somebody once told me the world is gonna roll me. I ain\'t the sharpest tool in the shed. She was looking kind of dumb with her finger and her thumb in the shape of an "L" on her forehead. Well the years start coming and they don\'t stop coming. Fed to the rules and I hit the ground running. Didn\'t make sense not to live for fun. Your brain gets smart but your head gets dumb. So much to do, so much to see. So what\'s wrong with taking the back streets? You\'ll never know if you don\'t go. You\'ll never shine if you don\'t glow.</p><p>Hey now, you\'re an all-star, get your game on, go play. Hey now, you\'re a rock star, get the show on, get paid. And all that glitters is gold. Only shooting stars break the mold.</p><p>It\'s a cool place and they say it gets colder. You\'re bundled up now, wait till you get older. But the meteor men beg to differ. Judging by the hole in the satellite picture. The ice we skate is getting pretty thin. The water\'s getting warm so you might as well swim. My world\'s on fire, how about yours? That\'s the way I like it and I never get bored.</p>';
    </script>

</body>

</html>